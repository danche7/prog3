#include <bits/stdc++.h>
using namespace std;

vector<vector<int>> res;


bool moze(vector<int> &v, int n)
{
   for (int i = 0; i < n * n; i++) {
        if (v[i] == 0) 
        continue;  

        int row = i / n, col = i % n;

        for (int j = i + 1; j < n * n; j++) {
            if (v[j] == 0) 
            continue;  
            
            int row1 = j / n, col1 = j % n;

            
            if (row == row1) 
            return false;

            
            if (col == col1) 
            return false;

            
            if (abs(row - row1) == abs(col - col1)) 
            return false;
        }
    }
    return true;
}


void generate(vector<int> &v, int n, int i, vector<int> &qn)
{
    if(i==n)
    {
        if(moze(v,n))
        res.push_back(v);
        return;
    }
    
    int q = qn[i];
    for(int j  = 0; j<n*n; j++)
    {
        if(v[j]==0)
        {
            v[j] = q;
                
            generate(v,n,i+1,qn);
                
            v[j] = 0;
        }
        
        
        
    }
}


int main()
{
    int n = 0;
    cin >> n;
    vector <int> qn(n);
    int j=1;
    for(int i=0; i<n; i++)
    qn[i] = j++;
    vector<int> v(n*n,0);
    generate(v,n,0,qn);
    
    
    for(auto v:res)
    {
        for(int i=0; i<n*n; i++)
        {
            cout << v[i] << ' ';
            if(i%n==n-1)
            cout << '\n';
        }
        
        cout << '\n';
    }
    
    cout << res.size() << '\n';
    
    return 0;
}